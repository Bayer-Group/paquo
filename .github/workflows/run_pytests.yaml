name: run pytests

on: [push, pull_request]

jobs:
  # RUN PYTEST ON PAQUO SOURCE
  tests:
    name: paquo pytests on ${{ matrix.os }}::py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8]
        include:
          # we'll test the python support on ubuntu
          - os: ubuntu-latest
            python-version: 3.7
          - os: ubuntu-latest
            python-version: 3.6
    steps:
    - uses: actions/checkout@v1
    - name: Cache conda
      uses: actions/cache@v1
      env:
        # Increase this value to reset cache if etc/example-environment.yml has not changed
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yaml') }}
    - name: Setup conda
      uses: goanpeca/setup-miniconda@v1
      with:
        environment-file: environment.yaml
        python-version: ${{ matrix.python-version }}
        auto-update-conda: true
        activate-environment: paquo
        use-only-tar-bz2: true
        auto-activate-base: false
    - shell: bash -l {0}
      name: Test with pytest
      run: |
        conda info
        conda list
        pytest --cov=./paquo --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        name: paquo

  # RUN MYPY STATIC TYPE ANALYSIS ON PAQUO SOURCE
  typing:
    name: paquo mypy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools
          pip install -e .[dev]
      - name: Run mypy
        run: |
          mypy paquo

  # DEPLOY PAQUO TO PYPI ON SUCCESS
  deploy:
    needs: [tests, typing]
    name: paquo deploy
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Install pep517
        run: >-
          python -m
          pip install
          pep517
          --user
      - name: Build a binary wheel and a source tarball
        run: >-
          python -m
          pep517.build
          --source
          --binary
          --out-dir dist/
          .
      # push all versions on master to test.pypi.org
      - name: Publish package to TestPyPI
        if: github.ref == 'refs/heads/master'
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.test_pypi_password }}
          repository_url: https://test.pypi.org/legacy/
      # push all tagged versions to pypi.org
      - name: Publish package to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
